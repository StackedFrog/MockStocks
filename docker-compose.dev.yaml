services:
  lgtm:
    image: grafana/otel-lgtm
    environment:
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_SECURITY_COOKIE_SAMESITE=none
    expose:
      - "4317"
      - "4318"
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/etc/grafana/dashboards
    networks:
      - backend

  redis:
    image: redis
    env_file: ".env"
    expose:
      - "6379"
    networks:
      - backend
    command: redis-server --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 2s
      retries: 5

  db:
    image: postgres
    env_file: ".env"
    expose:
      - "5432"
    volumes:
      - ./sql/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d dev_db"]
      interval: 5s
      timeout: 3s
      retries: 5

  auth:
    build:
      context: .
      dockerfile: services/auth_service/Dockerfile.dev
    env_file: ".env"
    volumes:
      - ./shared/:/app/shared
      - ./Cargo.toml:/app/Cargo.toml
      - ./Cargo.lock:/app/Cargo.lock
      - target_cache:/app/target
      - ./services/auth_service/:/app/services/auth_service
    expose:
      - "4002"
    networks:
      - backend
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy

  gateway:
    build:
      context: .
      dockerfile: services/gateway/Dockerfile.dev
    env_file: ".env"
    volumes:
      - ./services/gateway/:/app/services/gateway
      - ./shared/:/app/shared
      - ./Cargo.toml:/app/Cargo.toml
      - ./Cargo.lock:/app/Cargo.lock
      - target_cache:/app/target
    ports:
      - "4001:4001"
    networks:
      - backend

  user:
    build:
      context: .
      dockerfile: services/user_service/Dockerfile.dev
    env_file: ".env"
    volumes:
      - ./services/user_service/:/app/services/user_service
      - ./shared/:/app/shared
      - ./Cargo.toml:/app/Cargo.toml
      - ./Cargo.lock:/app/Cargo.lock
      - target_cache:/app/target
    expose:
      - "4004"
    networks:
      - backend
    depends_on:
      db:
        condition: service_healthy

  stocks_api_service:
    build:
      context: .
      dockerfile: services/stocks_api_service/Dockerfile.dev
    env_file: ".env"
    volumes:
      - ./services/stocks_api_service/:/app/services/stocks_api_service
      - ./shared/:/app/shared
      - ./Cargo.toml:/app/Cargo.toml
      - ./Cargo.lock:/app/Cargo.lock
      - target_cache:/app/target
    expose:
      - "4003"
    networks:
      - backend

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    env_file: ".env"
    environment:
      - HOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    expose:
      - "5173"
    networks:
      - backend


networks:
  backend:
    driver: bridge

volumes:
  target_cache:
